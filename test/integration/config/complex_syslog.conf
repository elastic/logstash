input {
  stdin {
    type => syslog
  }
}

filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{PROG:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{syslog_hostname}" ]
    }
    syslog_pri { }
    date {
      match => ["syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }

    if [syslog_timestamp] {
      mutate {
        add_field => [ "[times][created_at]",  "%{syslog_timestamp}"]
        add_field => [ "[times][received_at]",  "%{@timestamp}"]
      }
    }

    mutate {
      add_field => [ "[hosts][source]",  "%{received_from}"]
      add_field => [ "[level][facility]",  "%{syslog_facility}"]
      add_field => [ "[level][severity]",  "%{syslog_severity}"]
    }

    if !("_grokparsefailure" in [tags]) {
      mutate {
        replace => [ "@source_host", "%{syslog_hostname}" ]
        replace => [ "@message", "%{syslog_message}" ]
      }
    }
    mutate {
      remove_field => [ "syslog_hostname", "syslog_message", "syslog_timestamp" ]
    }
  }
}

output {
  stdout { codec => json_lines }
}

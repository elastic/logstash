buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'net.saliman:gradle-cobertura-plugin:2.2.8'
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation"
//        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'com.bmuschko.nexus'

group = 'org.logstash'
version = '5.0.0.dev'

project.sourceCompatibility = 1.7

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier 'sources'
    extension 'jar'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier 'javadoc'
    extension 'jar'
}

task copyGemjar(type: Copy, dependsOn: sourcesJar) {
    from project.jar
    into project.file('lib/logstash-core-event-java/')
}

task cleanGemjar {
    delete fileTree(project.file('lib/logstash-core-event-java/')) {
        include '*.jar'
    }
}

clean.dependsOn(cleanGemjar)
jar.finalizedBy(copyGemjar)

configurations.create('sources')
configurations.create('javadoc')
configurations.archives {
    extendsFrom configurations.sources
    extendsFrom configurations.javadoc
}

artifacts {
    sources(sourcesJar) {
        // Weird Gradle quirk where type will be used for the extension, but only for sources
        type 'jar'
    }

    javadoc(javadocJar) {
        type 'javadoc'
    }
}

configurations {
    provided
}

project.sourceSets {
    main.compileClasspath += project.configurations.provided
    main.runtimeClasspath += project.configurations.provided
    test.compileClasspath += project.configurations.provided
    test.runtimeClasspath += project.configurations.provided
}
project.javadoc.classpath += project.configurations.provided

idea {
    module {
        scopes.PROVIDED.plus += [project.configurations.provided]
    }
}

dependencies {
    compile 'com.fasterxml.jackson.core:jackson-core:2.7.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.1-1'
    compile 'joda-time:joda-time:2.9.3'
    provided 'org.jruby:jruby-core:1.7.22'
    testCompile 'junit:junit:4.12'
    testCompile 'net.javacrumbs.json-unit:json-unit:1.9.0'
}

modifyPom {
    project {
        name 'Logstash Core Event Java'
        url 'https://www.elastic.co/products/logstash'

        scm {
            url 'https://github.com/elastic/logstash'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }
    }
}

extraArchive {
    sources = false
    tests = true
    javadoc = false
}

// See http://www.gradle.org/docs/current/userguide/gradle_wrapper.html
task wrapper(type: Wrapper) {
    description = 'Install Gradle wrapper'
    gradleVersion = '2.8'
}

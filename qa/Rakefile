require "rspec"
require "rspec/core/runner"
require "rspec/core/rake_task"
require_relative "vagrant-helpers"

task :spec    => 'spec:all'
task :default => :spec

namespace :test do

  desc "Generate a valid ssh-config"
  task :ssh_config do
    require "json"
    cd "acceptance" do
      raw_ssh_config    = LogStash::VagrantHelpers.fetch_config[:stdout].split("\n");
      parsed_ssh_config = LogStash::VagrantHelpers.parse(raw_ssh_config)
      File.write("../.vm_ssh_config", parsed_ssh_config.to_json)
    end
  end

  namespace :acceptance do

    desc "Run all acceptance"
    task :all do
      all_boxes = LogStash::VagrantHelpers::DEFAULT_CENTOS_BOXES + LogStash::VagrantHelpers::DEFAULT_DEBIAN_BOXES 
      for box in all_boxes do
        LogStash::VagrantHelpers.bootstrap(box)
        exit(RSpec::Core::Runner.run([Rake::FileList["acceptance/spec/**/*_spec.rb"]]))
        LogStash::VagrantHelpers.destroy(box)
      end
    end

    desc "Run acceptance test in debian machines"
    task :debian do
      for box in LogStash::VagrantHelpers::DEFAULT_DEBIAN_BOXES do
        LogStash::VagrantHelpers.bootstrap(box)
        exit(RSpec::Core::Runner.run([Rake::FileList["acceptance/spec/debian/**/*_spec.rb"]]))
        LogStash::VagrantHelpers.destroy(box)
      end
    end

    desc "Run acceptance test in centos machines"
    task :centos do
      for box in LogStash::VagrantHelpers::DEFAULT_CENTOS_BOXES do
        LogStash::VagrantHelpers.bootstrap(box)
        exit(RSpec::Core::Runner.run([Rake::FileList["acceptance/spec/centos/**/*_spec.rb"]]))
        LogStash::VagrantHelpers.destroy(box)
      end
    end

    desc "Run one single machine acceptance test"
    task :single, :machine do  |t, args|
      machine = args[:machine]
      ENV['LS_VAGRANT_HOST'] = machine
      LogStash::VagrantHelpers.bootstrap(machine)
      if LogStash::VagrantHelpers::DEFAULT_DEBIAN_BOXES.include? machine 
        platform = "debian"
      elsif LogStash::VagrantHelpers::DEFAULT_CENTOS_BOXES.include? machine
        platform = "centos"
      end
      exit(RSpec::Core::Runner.run([Rake::FileList["acceptance/spec/#{platform}/**/*_spec.rb"]]))
    end
  end
end

# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json

steps:
  - label: ":passport_control: License check"
    key: "license-check"
    agents:
      image: "docker.elastic.co/ci-agent-images/platform-ingest/buildkite-agent-logstash-ci"
      cpu: "4"
      memory: "6Gi"
      ephemeralStorage: "100Gi"
    command: |
      set -euo pipefail

      source .buildkite/scripts/common/container-agent.sh
      export JRUBY_OPTS="-J-Xmx1g"
      export GRADLE_OPTS="-Xmx2g -Dorg.gradle.daemon=false -Dorg.gradle.logging.level=info"
      ci/license_check.sh -m 4G

  - label: ":rspec: Ruby unit tests"
    key: "ruby-unit-tests"
    agents:
      image: "docker.elastic.co/ci-agent-images/platform-ingest/buildkite-agent-logstash-ci"
      cpu: "4"
      memory: "8Gi"
      ephemeralStorage: "100Gi"
    command: |
      set -euo pipefail

      source .buildkite/scripts/common/container-agent.sh
      ci/unit_tests.sh ruby

  - label: ":java: Java unit tests"
    key: "java-unit-tests"
    agents:
      image: "docker.elastic.co/ci-agent-images/platform-ingest/buildkite-agent-logstash-ci"
      cpu: "8"
      memory: "16Gi"
      ephemeralStorage: "100Gi"
    command: |
      set -euo pipefail
      if [[ $BUILDKITE_PULL_REQUEST == "false" ]]; then
        # https://github.com/elastic/logstash/pull/15486 for background
        export ENABLE_SONARQUBE="false"
      else
        source .buildkite/scripts/pull-requests/sonar-env.sh
      fi

      source .buildkite/scripts/common/container-agent.sh
      ci/unit_tests.sh java
    artifact_paths:
      - "**/build/test-results/javaTests/TEST-*.xml"

  - label: ":lab_coat: Integration Tests / part 1"
    key: "integration-tests-part-1"
    agents:
      image: "docker.elastic.co/ci-agent-images/platform-ingest/buildkite-agent-logstash-ci-no-root"
      cpu: "8"
      memory: "16Gi"
      ephemeralStorage: "100Gi"
      # Run as a non-root user
      imageUID: "1002"
    command: |
      set -euo pipefail

      source .buildkite/scripts/common/container-agent.sh
      ci/integration_tests.sh split 0

  - label: ":lab_coat: Integration Tests / part 2"
    key: "integration-tests-part-2"
    agents:
      image: "docker.elastic.co/ci-agent-images/platform-ingest/buildkite-agent-logstash-ci-no-root"
      cpu: "8"
      memory: "16Gi"
      ephemeralStorage: "100Gi"
      # Run as a non-root user
      imageUID: "1002"
    command: |
      set -euo pipefail

      source .buildkite/scripts/common/container-agent.sh
      ci/integration_tests.sh split 1

  - label: ":lab_coat: IT Persistent Queues / part 1"
    key: "integration-tests-qa-part-1"
    agents:
      image: "docker.elastic.co/ci-agent-images/platform-ingest/buildkite-agent-logstash-ci-no-root"
      cpu: "8"
      memory: "16Gi"
      ephemeralStorage: "100Gi"
      # Run as non root (logstash) user. UID is hardcoded in image.
      imageUID: "1002"
    command: |
      set -euo pipefail

      source .buildkite/scripts/common/container-agent.sh
      export FEATURE_FLAG=persistent_queues
      ci/integration_tests.sh split 0

  - label: ":lab_coat: IT Persistent Queues / part 2"
    key: "integration-tests-qa-part-2"
    agents:
      image: "docker.elastic.co/ci-agent-images/platform-ingest/buildkite-agent-logstash-ci-no-root"
      cpu: "8"
      memory: "16Gi"
      ephemeralStorage: "100Gi"
      # Run as non root (logstash) user. UID is hardcoded in image.
      imageUID: "1002"
    command: |
      set -euo pipefail

      source .buildkite/scripts/common/container-agent.sh
      export FEATURE_FLAG=persistent_queues
      ci/integration_tests.sh split 1

  - label: ":lab_coat: x-pack unit tests"
    key: "x-pack-unit-tests"
    agents:
      image: "docker.elastic.co/ci-agent-images/platform-ingest/buildkite-agent-logstash-ci-no-root"
      cpu: "8"
      memory: "16Gi"
      ephemeralStorage: "100Gi"
      # Run as non root (logstash) user. UID is hardcoded in image.
      imageUID: "1002"
    command: |
      set -euo pipefail

      source .buildkite/scripts/common/container-agent.sh
      x-pack/ci/unit_tests.sh

  - label: ":lab_coat: x-pack integration"
    key: "integration-tests-x-pack"
    agents:
      image: "docker.elastic.co/ci-agent-images/platform-ingest/buildkite-agent-logstash-ci-no-root"
      cpu: "8"
      memory: "16Gi"
      ephemeralStorage: "100Gi"
      # Run as non root (logstash) user. UID is hardcoded in image.
      imageUID: "1002"
    command: |
      set -euo pipefail

      source .buildkite/scripts/common/container-agent.sh
      x-pack/ci/integration_tests.sh

  - wait: ~
    continue_on_failure: true

  - label: "üèÅ Annotate JUnit results"
    # the plugin requires docker run, hence the use of a VM
    agents:
      provider: gcp
      imageProject: elastic-images-prod
      image: family/platform-ingest-logstash-ubuntu-2204
      machineType: "n2-standard-2"
    plugins:
      - junit-annotate#v2.4.1:
          artifacts: "**/TEST-*.xml"

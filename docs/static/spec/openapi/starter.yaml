
openapi: 3.1.0
info:
  title: Logstash APIs
  description: |
    When you run Logstash, it automatically captures runtime metrics that you can use to monitor the health and performance of your Logstash deployment.
    The metrics collected by Logstash include:
    
    - Logstash node info, like pipeline settings, OS info, and JVM info.
    - Plugin info, including a list of installed plugins.
    - Node stats, like JVM stats, process stats, event-related stats, and pipeline runtime stats.
    - Hot threads.

    The APIs that retrieve these metrics are available by default without requiring any extra configuration.

    ## Documentation source and versions

    This documentation is derived from the `main` branch of the [logstash](https://github.com/elastic/logstash) repository.
    It is provided under license [Attribution-NonCommercial-NoDerivatives 4.0 International](https://creativecommons.org/licenses/by-nc-nd/4.0/).
  version: '1.0'
  x-doc-license:
    name: Attribution-NonCommercial-NoDerivatives 4.0 International
    url: https://creativecommons.org/licenses/by-nc-nd/4.0/
  x-feedbackLink:
    label: Feedback
    url: https://github.com/elastic/docs-content/issues/new?assignees=&labels=feedback%2Ccommunity&projects=&template=api-feedback.yaml&title=%5BFeedback%5D%3A+
servers:
  - url: /
security:
  - apiKeyAuth: []


paths: 
  /_node/<types>:
    get:
      summary: Get node info
      description: >
        Get information about Logstash nodes, where `<types>` (optional) specifies the types of node info you want returned.
        You can limit the info that is returned by combining any of these types in a comma-separated list:

        - `pipelines`
        - `os`
        - `jvm`

      operationId: nodePlugins
      parameters:
        - name: pretty
          in: query
          schema:
            type: boolean
          description: >
            If you append `?pretty=true` to the request, the JSON returned will be pretty formatted. Use it for debugging only!
      responses:
        '200':
          description: Indicates a successful call
          content:
            application/json:
              examples:
                nodePluginsExample1:
                  total: 1
                  plugins:
                    - name: logstash-codec-cef
                      version: 4.1.2
  /_node/plugins:
    get:
      summary: Get plugin info
      description: >
        Get information about all Logstash plugins that are currently installed.
        This API returns the same output you get by running the `bin/logstash-plugin list --verbose` command.
      operationId: nodePlugins
      parameters:
        - name: pretty
          in: query
          schema:
            type: boolean
          description: >
            If you append `?pretty=true` to the request, the JSON returned will be pretty formatted. Use it for debugging only!
      responses:
        '200':
          description: Indicates a successful call
          content:
            application/json:
              examples:
                nodePluginsExample1:
                  total: 1
                  plugins:
                    - name: logstash-codec-cef
                      version: 4.1.2

  /_node/hot_threads:
    get:
      summary: Get hot threads
      description: >
        Get information about current hot threads for Logstash.
        A hot thread is a Java thread that has high CPU usage and takes longer than normal to execute. 
      operationId: nodeHot_threads
      parameters:
        - name: threads
          in: query
          schema:
            type: integer
          description: >
            The number of hot threads to return. The default is 10. 
        - name: stacktrace_size
          in: query
          schema:
            type: integer
          description: >
            The depth of the stack trace to report for each thread. The default is 50. 
        - name: ignore_idle_threads
          in: query
          schema:
            type: boolean
          description: >
            If true, does not return idle threads. The default is `true`. 
        - name: pretty
          in: query
          schema:
            type: boolean
          description: >
            If you append `?pretty=true` to the request, the JSON returned will be pretty formatted. Use it for debugging only!
        - name: human
          in: query
          schema:
            type: boolean
          description: >
            If you append `?human=true` to the request, the JSON returned will be in a human-readable format.
      responses:
        '200':
          description: Indicates a successful call
          content:
            application/json:
              examples:
                nodeHotThreadsExample1:
                  hot_threads:
                    - time: 2025-01-06T18:25:28-07:00
                      busiest_threads: 3
                      threads: 
                        name: Ruby-0-Thread-7
                        percent_of_cpu_time: 0.0
                        state: timed_waiting
                        path: /path/to/logstash-8.17.0/vendor/bundle/jruby/1.9/gems/puma-2.16.0-java/lib/puma/thread_pool.rb:187
                        traces: java.lang.Object.wait(Native Method)", "org.jruby.RubyThread.sleep(RubyThread.java:1002)", "org.jruby.RubyKernel.sleep(RubyKernel.java:803)


[float]
[[right-option]]
=== Is {ls} the right ingest option?

The Elastic Stack offers options for ingesting data into {es}.
Is {ls} the right ingest option for _your_ particular use case?

Here are your ingest options:

* <<fb-ingest,{Filebeat}>>
* <<ingest-node,{es} ingest nodes>>
* <<ls-ingest,{ls}>>
* <<combi-ingest, A combination>>

{ls} is powerful. It's more powerful (and potentially more complex) than
required for many use cases. Or, Logstash might be just what you need.
Here's more information to help you decide.

[float]
[[fb-ingest]]
==== {Filebeat} for ingest

Beats are lightweight data shippers that you install as agents on your servers.
Filebeat is a great tool for tailing files, and it comes with 
{filebeat-ref}/filebeat-modules.html[more than 20 modules] to get you up and running
quickly. Filebeat modules can ingest data in a wide range of common log formats
(such as Apache, Elasticsearch, Kafka, and MongoDB) with minimal configuration.
They also come with sample dashboards, index templates, and, in some cases,
machine learning jobs.

The {filebeat-ref}/filebeat-modules.html[list of modules] keeps growing, so check it out
to see if a module is the right solution for you.

If the data you want to ingest is not covered by these modules, Logstash and Elasticsearch
ingest nodes provide a flexible and powerful way to parse and process most types
of text-based data. 

[float]
[[ingest-node]]
==== Elasticsearch ingest nodes for ingest

You can use {ref}/ingest.html[Elasticsearch ingest nodes] to process documents in Elasticsearch prior to
indexing. They allow simple architectures with minimum components, where
applications send data directly to Elasticsearch for processing and indexing.
This often simplifies getting started with the Elastic Stack, and also
scales out as data volumes grow. 

Ingest nodes duplicates some but not all functionality that Logstash offers.

[float]
[[ls-ingest]]
==== Logstash for ingest  

{ls} uses plugins to offer a wide variety of inputs, filters, and outputs for
collecting, enriching, and transforming data.

{ls} is the best choice when you need to:

* send to multiple outputs
* "read in" data
* enrich your data
* modify your data using grok or dissect
* strip information from your data before forwarding (removing `location` for GDPR compliance, for example)
* use queueing

If you are still trying to decide if {es} ingest node or {ls} is your best option,
check out this article: 
https://www.elastic.co/blog/should-i-use-logstash-or-elasticsearch-ingest-nodes[Should I use Logstash or Elasticsearch ingest nodes?]

[float]
[[combi-ingest]]
==== Combination of ingest options

A combination of ingest options may be the right approach for your use case.
In fact, Filebeat modules use ingest nodes for processing.

Other examples include {filebeat} to {ls} (see Filebeat's 
{filebeat-ref}/filebeat-module-logstash.html)[Logstash module]), and
{filebeat} to ingest node (see
{filebeat-ref}/configuring-ingest-node.html)[Parse data using ingest node] in
the {filebeat} Reference).



[[command-line-flags]]
=== Command-Line Flags

Logstash has the following flags. You can use the `--help` flag to display this information.

Instead of specifying options at the command line, we recommend that you control Logstash execution
by specifying options in the Logstash <<logstash-settings-file,settings file>>. Using a settings file
makes it easier for you to specify mutliple options, and it provides you with a single, versionable
file that you can use to start up Logstash consistently for each run. 

Any flags that you set at the command line override the corresponding settings in the Logstash
<<logstash-settings-file,settings file>>. 

added[5.0.0-alpha3, Command-line flags have dots instead of dashes in their names]

*`-f, --path.config CONFIGFILE`*::
 Load the Logstash config from a specific file or directory. If
 you specify a directory or wildcard, config files are read from the directory in
 alphabetical order.

*`-e, --config.string CONFIGSTRING`*::
 Use the given string as the configuration data. Use the same syntax as the config file.
 If no input is specified, `stdin { type => stdin }` is used by default. If no output
 is specified, `stdout { codec => rubydebug }}` is used by default.

*`-w, --pipeline.workers COUNT`*::
 Set the number of workers that will, in parallel, execute the filter and output stages of the pipeline.  
 This defaults to the number of the host's CPU cores. If you find that events are backing up, or that
 the CPU is not saturated, consider increasing this number to better utilize machine processing power.
 
*`-b, --pipeline.batch.size SIZE`*::
 Define the maximum number of events an individual worker thread will collect from inputs
 before attempting to execute its filters and outputs. The default is 125 events.
 Larger batch sizes are generally more efficient, but come at the cost of increased memory
 overhead. You may have to increase the JVM heap size by setting the `LS_HEAP_SIZE`
 variable to effectively use the option.

*`-u, --pipeline.batch.delay DELAY_IN_MS`*::
 When creating pipeline event batches, how long in milliseconds to wait before dispatching an undersized
  batch to filters and workers.
 The default is 5ms.

*`-l, --path.log FILE`*::
 Log to a given file. The default is to log to stdout

*`--log.level LEVEL`*::
 Valid levels are:
* `warn`: log warnings
* `quiet`: log errors
* `verbose`: log verbose info (for users)
* `debug`: log debugging info (for developers)

*`--log.format FORMAT`*::
 Set to "json" to log in JSON format, or "plain" (default) to use `Object#.inspect`.
 
*`--path.settings SETTINGS_DIR`*::
 Set the directory containing the `logstash.yml` <<logstash-settings-file,settings file>>.
 
*`--node.name NAME`*::
 Set a descriptive name for the node. If no value is specified, defaults to the machine's hostname. 

*`--config.debug`*::
 Show the fully compiled configuration as a debug log message (you must also have `--log.level=debug` enabled).
 WARNING: The log message will include any 'password' options passed to plugin configs as plaintext, and may result
 in plaintext passwords appearing in your logs!

*`-V, --version`*::
  Display the version of Logstash.

*`-p, --path.plugins`*::
  Where to find custom plugins. This flag can be given multiple times to include
  multiple paths. Plugins are expected to be in a specific directory hierarchy:
  `PATH/logstash/TYPE/NAME.rb` where `TYPE` is `inputs`, `filters`, `outputs`, or `codecs`,
  and `NAME` is the name of the plugin.

*`-t, --config.test_and_exit`*::
  Check configuration and then exit. Note that grok patterns are not checked for
  correctness with this flag.
  Logstash can read multiple config files from a directory. If you combine this
  flag with `--log.level=debug`, Logstash will log the combined config file, annotating
  each config block with the source file it came from.
  
*`-r, --config.reload.automatic`*::
  Periodically check if the configuration has changed and reload the configuration whenever it is changed.

*`--config.reload.interval RELOAD_INTERVAL`*::
  Set how often in seconds Logstash checks the config files for changes. The default is every 3 seconds.

*`--http.host HTTP_HOST`*::
  The bind address for the metrics REST endpoint. The default is "127.0.0.1".

*`--http.port HTTP_PORT`*::
  The bind port for the metrics REST endpoint. The default is 9600-9700.
  This settings accept a range of the format 9600-9700 and Logstash will pick up the first available port.

*`--pipeline.unsafe_shutdown`*::
  Force Logstash to exit during shutdown even if there are still inflight events
  in memory. By default, Logstash will refuse to quit until all received events
  have been pushed to the outputs. Enabling this option can lead to data loss during shutdown.

*`-h, --help`*::
  Print help


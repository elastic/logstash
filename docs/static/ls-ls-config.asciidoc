[[ls-to-ls]]
=== Configuring Logstash-to-Logstash Communication

You can set up communication between two Logstash machines by connecting the Lumberjack output to the Beats input. You may need this configuration if the data path crosses network or firewall boundaries, for example. If you don't have a compelling need for Logstash-to-Logstash communication, then don't implement it.

[[ls-to-ls-overview]]
==== Configuration overview

Use the Lumberjack protocol to connect two Logstash machines.

. Generate a trusted SSL certificate (required by the lumberjack protocol).
. Save the SSL certificate on the upstream Logstash machine.
. Save the SSL certificate and key on the downstream Logstash machine.
. Set the downstream Logstash instance to listen for incoming Lumberjack connections through the Beats input.
. Set the upstream Logstash instance to use the Lumberjack output to send data.
. Test it.

[[generate-self-signed-cert]]
===== Generate a self-signed SSL certificate and key

You can use the `openssl req` command to generate a self-signed certificate and key. The `openssl req` command is available on any operating system that comes with SSL.

Run the following command:

[source,shell]
----
openssl req -x509 -batch -nodes -newkey rsa:2048 -keyout lumberjack.key -out lumberjack.cert -subj /CN=localhost
----

where:

* `lumberjack.key` specifies the name of the SSL key to be created
* `lumberjack.cert` specifies the name of the SSL certificate to be created
* `localhost` specifies the name of the upstream Logstash computer


This command produces output similar to the following:

[source,shell]
----
Generating a 2048 bit RSA private key
.................................+++
....................+++
writing new private key to 'lumberjack.key'
----

[[save-cert-key]]
===== Save the SSL certificate and key

Copy the SSL certificate to the upstream Logstash machine.

Copy the SSL certificate and key to the downstream Logstash machine.

[[config-demo]]
==== Demo

You can demo the configuration by running two Logstash instances on one computer.

[[save-cert-ls1]]
===== Start the upstream Logstash machine

On the upstream Logstash machine, run the following command:
[source,shell]
----
bin/logstash -e 'input { beats { codec => json port => 5000 ssl_certificate => "lumberjack.cert" ssl_key => "lumberjack.key"} }'
----

where:

* `5` specifies the number of events you want to generate and send
* `lumberjack.cert` specifies the path and name of the SSL certificate you created
* `localhost` specifies the address of the downstream Logstash computer

[[save-cert-ls2]]
===== Start the downstream Logstash machine

On the downstream Logstash machine, run the following command:

[source,shell]
----
bin/logstash --path.data /tmp/z -e 'input { generator { count => 5 } } output { lumberjack { codec => json hosts => "localhost" ssl_certificate => "lumberjack.cert" port => 5000 } }'
----

where:

* `--path.data /tmp/z -e` sets a different data path (required to start a second Logstash on the same computer)
* `lumberjack.key` specifies the path and name of the SSL key
* `lumberjack.cert` specifies the path and name of the SSL certificate
* `localhost` specifies the name of the computer

[[test-ls-to-ls]]
===== Test the communication

Use the input generator to send test events from the upstream Logstash machine.

The following command sends five events over port 5000:

[source,shell]
----
bin/logstash â€”path.data /tmp/z -e 'input { generator {count => 5 } } output { lumberjack { codec => json hosts => "localhost" ssl_certificate => "lumberjack.cert" Port => 5000 } }'
----

Watch the downstream Logstash machine for the incoming events. You should see five incrementing events similar to the following:

[source,shell]
----
{
  "@timestamp" => 2018-02-07T12:16:39.415Z,
  "sequence"   => 0
  "tags"       => [
    [0] "beats_input_codec_json_applied"
  ],
  "message"    => "Hello world",
  "@version"   => "1",
  "host"       => "ls1.semicomplete.com"
}
----
If you see all five events with consistent fields and formatting, incrementing by one, then your configuration is correct.

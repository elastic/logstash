[[ls-to-ls]]
=== Logstash-to-Logstash communication

{ls}-to-{ls} communication is available if you need to have one {ls} instance communicate with another {ls} instance. 
Implementing Logstash-to-Logstash communication can add complexity to your environment, but you may need it if the data path crosses network or firewall boundaries. 
However, we suggest you don't implement unless it is strictly required.

NOTE: If you are looking for information on connecting multiple pipelines within
one Logstash instance, see <<pipeline-to-pipeline>>.

Logstash-to-Logstash communication can be achieved in one of two ways: 

* <<ls-to-ls-lumberjack>>
* <<ls-to-ls-http>>

[[ls-to-ls-lumberjack]]
==== Lumberjack output to Beats input

Logstash-to-Logstash using Lumberjack and Beats has been our standard approach for {ls}-to-{ls}, and may still be the best option for more robust use cases. 

Before you implement the Lumberjack to Beats configuration, keep these points in mind: 

* Lumberjack and Beats provides high availability, but does not provide load balancing. 
The Lumberjack output plugin allows defining multiple output hosts for high availability, but instead of load-balancing between all output hosts, it falls back to one host on the list in the case of failure.
* If you need a proxy between the Logstash instances, TCP proxy is the only option.
* There's no explicit way to exert back pressure back to the beats input.

[[ls-to-ls-lumberjack-config]]
.*Lumberjack-Beats: Configuration overview and instructions*
[%collapsible]
====
include::ls-ls-lumberjack.asciidoc[]
====

[[ls-to-ls-http]]
==== HTTP output to HTTP input

HTTP output to HTTP input is an alternative approach for Logstash-to-Logstash communication. This approach relies on the use of <<plugins-outputs-http,http output>> to <<plugins-inputs-http,http input>> plugins.
Take these considerations into account before you implement:

* It does not provide built-in high availability. You will need to implement your own load balancer in between the output and the input. 
* If you need a proxy between the Logstash instances, you can use any HTTP proxy. 
* Additional connection information is added to events (by the HTTP input), and this may be data you don't want.

For now, <<plugins-outputs-http,http output>> to <<plugins-inputs-http,http input>> with manual configuration is the best path forward if these limitations don't apply to your use case.

NOTE: In the future, we may replace the implementation of Logstash-to-Logstash with a purpose-build HTTP implementation, which would deprecate the use of Lumberjack and Beats, or the use of the HTTP Input and Output plugins.


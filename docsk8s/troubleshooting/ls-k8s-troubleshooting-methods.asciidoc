[[ls-k8s-troubleshooting-methods]]
=== Troubleshooting methods

There are a number of methods that you can use to diagnose the state of your Logstash and Kubernetes system, both in the event of any problems, and as part of a day-to-day approach to ensuring that everything is running as expected.

* <<ls-k8s-checking-resources>>
* <<ls-k8s-viewing-logs>>
* <<ls-k8s-connecting-to-a-container>>
* <<ls-k8s-diagnostics>>

[float]
[[ls-k8s-checking-resources]]
=== Checking resources

You can use the standard Kubernetes `get` and `describe` commands to quickly gather details about any resources in your Logstash and Kubernetes environment.

`kubectl get pod logstash-7477d46bb7-4lcnv`

`kubectl describe pod logstash-7477d46bb7-4lcnv`

`kubectl top pod logstash-7477d46bb7-4lcnv`

[float]
[[ls-k8s-viewing-logs]]
=== Viewing logs

{ls} Docker containers do not create log files by default. They log to standard output.

To view the log, `kubectl logs -f logstash-7477d46bb7-4lcnv`

[float]
[[ls-k8s-connecting-to-a-container]]
=== Connecting to a container

At times, you may need to connect directly from your command shell into Logstash and other Kubernetes resources.

`kubectl exec -it logstash-7477d46bb7-4lcnv -- bash`

[float]
[[ls-k8s-diagnostics]]
=== Running diagnostics

Sometimes, you may need to get thread dump and heap dump to debug hard problem. First you need to connect to the container.

==== Thread Dump

`jdk/bin/jstack -l 1 > /tmp/jstack_output.txt`

==== Heap Dump

`jdk/bin/jcmd 1 GC.heap_dump /tmp/heap_dump.hprof`
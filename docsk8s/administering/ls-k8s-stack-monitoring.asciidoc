[[ls-k8s-stack-monitoring]]
=== Stack Monitoring

WARNING: This documentation is still in development and may be changed or removed in a future release.

An important step to making your environment production ready is to configure stack monitoring. Monitoring metrics can be sent to an external resource, such as {ess} or {eck}, so that in the event that any components of your environment become unresponsive, your monitoring data is available.

To enable {logstash-ref}/monitoring-with-metricbeat.html[Stack Monitoring] for {ls}, you need Metricbeat to collect {ls} metrics, {es} to store the metrics and Kibana to view the result.

Assuming you have {es} and Kibana installed on ECK, follow these steps to configure monitoring:

* <<ls-k8s-monitor-config-metricbeat>>
* <<ls-k8s-monitor-config-ls>>
* <<ls-k8s-monitor-kibana>>

[float]
[[ls-k8s-monitor-config-metricbeat]]
==== Config Metricbeat

Deploy the following metricbeat to ECK.

[source,yaml]
--
apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: demo
  labels:
    app: logstash-demo
spec:
  type: metricbeat
  version: 8.3.2
  elasticsearchRef:
    name: demo
  config:
    metricbeat.modules:
      - module: elasticsearch
        ssl.enabled: true
        metricsets:
          - ccr
          - cluster_stats
          - enrich
          - index
          - index_recovery
          - index_summary
          - ml_job
          - node_stats
          - shard
        period: 10s
        hosts:
          - "https://demo-es-http:9200"
        username: default-demo-beat-user
        password: ${ES_PW}
        ssl.certificate_authorities: ["/usr/share/metricbeat/es_ca.crt"]
        xpack.enabled: true
      - module: logstash
        metricsets:
          - node
          - node_stats
        period: 10s
        hosts:
          - logstash:9600
        xpack.enabled: true
  deployment:
    podTemplate:
      spec:
        dnsPolicy: ClusterFirstWithHostNet
        securityContext:
          runAsUser: 0
        containers:
          - name: metricbeat
            volumeMounts:
              - name: es-ca
                mountPath: /usr/share/metricbeat/es_ca.crt
                subPath: ca.crt
            env:
              - name: ES_PW
                valueFrom:
                  secretKeyRef:
                    name: demo-beat-user
                    key: default-demo-beat-user
        volumes:
          - name: es-ca
            secret:
              secretName: demo-beat-es-ca

--

`elasticsearchRef` points to name of {es} cluster on ECK that stores metrics. In this example, the cluster name is `demo`.

Metricbeat enable `module: logstash` and `module: elasticsearch` to collect metrics from `logstash:9600` and `demo-es-http:9200` for every `10` seconds.

[float]
[[ls-k8s-monitor-config-ls]]
=== Config {ls}

Put the `cluster_uuid` of the monitoring {es} cluster to `monitoring.cluster_uuid` in the configuration file logstash.yml in `ConfigMap`

[source,yaml]
--
apiVersion: v1
data:
  logstash.yml: |
    api.http.host: "0.0.0.0"
    monitoring.cluster_uuid: MONITORING_ES_CLUSTER_UUID
kind: ConfigMap
--

[float]
[[ls-k8s-monitor-kibana]]
==== View monitoring data in Kibana

When everything is set, Kibana > Stack Monitoring page shows the chart.

image::./images/sm-kibana.png[Stack Monitoring screenshot]

[[ls-k8s-monitor-external]]
==== Ship metrics to external monitoring {es} cluster

Metrics can be sent to {es} cluster that is not managed by ECK. To use it, remove the `elasticsearchRef` from the specification and include an output configuration in the `spec.config`.

[source,yaml]
--
apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: demo
spec:
  config:
    output.elasticsearch:
      hosts: ["https://es-mon1:9200"] 
      username: "elastic"
      password: "changeme"
--
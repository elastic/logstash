[[ls-k8s-stack-monitoring]]
=== Stack Monitoring

WARNING: This documentation is still in development and may be changed or removed in a future release.

An important step to making your environment production ready is to configure stack monitoring. Monitoring metrics can be sent to an external resource, such as {ess} or {eck}, so that in the event that any components of your environment become unresponsive, your monitoring data is available.

To enable {logstash-ref}/monitoring-with-metricbeat.html[Stack Monitoring] for {ls}, you need Metricbeat to collect {ls} metrics, {es} to store the metrics and Kibana to view the result.

Assuming you have installed ECK, the following example modifies the link:https://github.com/elastic/cloud-on-k8s/blob/main/config/recipes/beats/stack_monitoring.yaml[recipe] of Beats stack monitoring. The recipe has initiated a production {es} cluster, a monitoring {es} cluster, {filebeat}, {metricbeat}, a production Kibana and a monitoring Kibana. It monitors {es} and Kibana and send metrics to monitoring cluster.
We use {metricbeat-ref}/configuration-autodiscover.html[autodiscover] to config monitoring for multiple {ls}.

* <<ls-k8s-monitor-config-metricbeat>>
* <<ls-k8s-monitor-config-ls>>
* <<ls-k8s-monitor-kibana>>

[float]
[[ls-k8s-monitor-config-metricbeat]]
==== Config Metricbeat

{metricbeat} has configed to send metrics to `elasticsearch-monitoring` cluster. To monitor {ls}, add logstash module to {metricbeat}

[source,yaml]
--
apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: metricbeat
spec:
  type: metricbeat
  version: 8.4.2
  elasticsearchRef:
    name: elasticsearch-monitoring
  config:
    metricbeat:
      autodiscover:
        providers:
          - type: kubernetes
            scope: cluster
            hints.enabled: true
            templates:
              - condition:
                  contains:
                    kubernetes.labels.app: ls
                config:
                  - module: logstash
                    metricsets:
                      - node
                      - node_stats
                    period: 10s
                    hosts: "http://${data.host}:9600"
                    xpack.enabled: true
...
--

{metricbeat} scans for the pods with label `app: ls` to collect {ls} metrics from port `9600` for every `10` seconds.

[float]
[[ls-k8s-monitor-config-ls]]
=== Config {ls}

Add label `app: ls` to `Deployment` for autodiscover.

[source,yaml]
--
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  labels:
    app: ls
...
--

Provide the `cluster_uuid` of the production {es} cluster to `monitoring.cluster_uuid` in logstash.yml.

[source,yaml]
--
apiVersion: v1
data:
  logstash.yml: |
    api.http.host: "0.0.0.0"
    monitoring.cluster_uuid: PRODUCTION_ES_CLUSTER_UUID
kind: ConfigMap
metadata:
  name: logstash-config
--

[float]
[[ls-k8s-monitor-kibana]]
==== View monitoring data in Kibana

When everything is set, Kibana > Stack Monitoring page will show the Logstash data.

image::./images/sm-kibana.png[Stack Monitoring screenshot]

[[ls-k8s-monitor-external]]
==== Ship metrics to external monitoring {es} cluster

Metrics can be sent to {es} cluster that is not managed by ECK. To use it, remove the `elasticsearchRef` from the specification and include an output configuration in the `spec.config`.

[source,yaml]
--
apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: metricbeat
spec:
  config:
    output.elasticsearch:
      hosts: ["https://es:9200"] 
      username: "elastic"
      password: "changeme"
...
--

[[ls-k8s-monitor-elastic-cloud]]
==== Ship metrics to Elastic Cloud

To configure Metricbeat for sending data to a cluster in Elastic Cloud, remove the `elasticsearchRef` from the specification and provide `cloud.id` and `cloud.auth` that you've obtained during deployment in Elastic Cloud.

[source,yaml]
--
apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: metricbeat
spec:
  config:
    cloud.id: # YOUR CLOUD ID
    cloud.auth: # YOUR CLOUD AUTH
...
--
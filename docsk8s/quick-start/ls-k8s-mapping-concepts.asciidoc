[[ls-k8s-mapping-concepts]]
=== Logstash Configuration And Kubernetes

WARNING: This documentation is still in development and may be changed or removed in a future release.

The <<ls-k8s-mapping-concepts,guide to mapping {ls} configurations to Kubernetes>> guide demonstrates how to set logstash configurations and settings in a Kubernetes environment

* <<qs-logstash-yaml>>
* <<qs-jvm-options>>
* <<qs-log4j>>
* <<qs-pipeline-configuration>>

When configuring logstash, as well as creating the <<qs-pipeline-configuration, pipeline definition(s)>>, you will typically need to configure the logstash instance itself by customizing <<qs-logstash-yaml, the logstash yaml file>>, as well as potentially making changes to the <<qs-jvm-options, jvm options>>, the <<qs-log4j, the log4j settings>>.

[float]
[[qs-pipeline-configuration]]

==== Single Pipeline

For single pipeline configurations, you can take advantage of the default `pipeline.yml` from the docker image, which expects pipelines to be present in the `/usr/share/logstash/pipeline`. From here, we can create the pipeline definition, and we can represent the pipeline in a single, or multiple files. Here, we create a `ConfigMap`, which contains a simple pipeline definition, with the inputs and outputs split into separate configuration files:

Sample Pipeline
```
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-pipeline <1>
  labels:
    app: logstash-demo
data:
  logstash-input.conf: | <2>
    input {
      beats {
        port => "5044"
      }
    }
  logstash-output.conf: | <3>
    output {
      elasticsearch {
        hosts => ["https://demo-es-http:9200"]
      }
    }
```

<1> Name of `ConfigMap` to be referenced in `Deployment`.
<2> This will create a `ConfigMap` representing the inputs for a pipeline.
<3> This will create a `CongigMap` representing the outputs for a pipeline.

From there, you will define your `Volume` in your `Deployment` template

```
volumes:
  - name: logstash-pipeline
    configMap:
      name: logstash-pipeline
```

and mount the volume in your container

```
  volumeMounts:
    - name: logstash-pipeline
      mountPath: /usr/share/logstash/pipeline
```



==== Multiple Pipelines

<<multiple-pipelines,Multiple pipelines>> require an additional `ConfigMap` to represent <<pipelines.yml

As with standard `pipelines.yml` definitions, the entire pipeline definitions can be inline in the `pipelines.yml` `ConfigMap`, or can point to files or folders containing pipeline definitions.

[float]
[[qs-logstash-yaml]]



[float]
[[qs-jvm-options]]

[float]
[[qs-log4j]]
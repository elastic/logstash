# Generated by Chef for REDACTED
# Do NOT modify this file by hand.
#
filter {
	if [type] == "syslog"  {
		if "_grokparsefailure_sysloginput" in [tags] {
			drop { 
				id => "filter_drop_syslogintput_syslog"
			}
		}  
		date {
		  match => [ "timestamp", "MMM d HH:mm:ss", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "MMMM d'th' yyyy',' HH:mm:ss.SSS" , "MMMM dd'th' yyyy',' HH:mm:ss.SSS" ]
		  locale => "en_GB"
		  timezone => "Europe/London"
		  id => "filter_date_syslog"
		}
		syslog_pri { 
			id => "filter_syslog_pri_syslog"
		}
		mutate {
			add_field => [ "received_from", "%{host}" ]
			replace => [ "host", "%{logsource}"]
			replace => [ "timestamp", "%{@timestamp}" ]
			id => "filter_mutate_syslog_add_fields"
		}		
		cidr {
			add_tag => [ "host_is_ip" ]
			address => [ "%{host}" ]
			network => [ "0.0.0.0/0" ]
			id => "filter_cidr_syslog_host"
		}
		if "host_is_ip" not in [tags] {
			dns {
				resolve => [ "host" ]
				action => "replace"
				remove_tag => [ "host_is_ip" ]
				id => "filter_dns_syslog_host"
			}
		}
		cidr {
			add_tag => [ "logsource_is_ip" ]
			address => [ "%{logsource}" ]
			network => [ "0.0.0.0/0" ]
			id => "filter_cidr_syslog_logsource"
		}
		if ("logsource_is_ip" in [tags]) {
			dns {
				reverse => [ "logsource" ]
				action => "replace"
				remove_tag => [ "host_is_ip" ]
				id => "filter_dns_syslog_logsource"
			}
		}
	}

	if [type] == "local-syslog" {
		grok {
			match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
			add_field => [ "received_at", "%{@timestamp}" ]
			add_field => [ "received_from", "%{host}" ]
			id => "filter_grok_syslog_local-syslog"
		}	
		if "_grokparsefailure" not in [tags] {
			syslog_pri { 
				id => "filter_syslog_pri_syslog_local-syslog"
			}	
			date {
				match => [ "syslog_timestamp", "MMM d HH:mm:ss", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
				locale => "en"
				timezone => "Europe/London"
				id => "filter_date_syslog_local-syslog"
			}
			mutate {
				replace => [ "@source_host", "%{syslog_hostname}" ]		
				replace => [ "@message", "%{syslog_message}" ]
				id => "filter_mutate_syslog_local-syslog_add_fields"
			}
			mutate {
				remove_field => [ "syslog_hostname", "syslog_message", "syslog_timestamp" ]
				id => "filter_mutate_syslog_local-syslog_remove_fields"
			}
		}			
	}

	if [type] == "beats-syslog"  {
		syslog_pri { 
			id => "filter_syslog_pri_syslog_beats-syslog"
		}
		cidr {
			add_tag => [ "host_is_ip" ]
			address => [ "%{host}" ]
			network => [ "0.0.0.0/0" ]
			id => "filter_cidr_syslog_beats-syslog"
		}
		if "host_is_ip" not in [tags] {
			dns {
				resolve => [ "host" ]
				action => "replace"
				id => "filter_dns_syslog_beats-syslog_host"
			}
		}
	}
}